{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/find-learning-resources.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A flow for finding various learning resources based on a query.\n *\n * - findLearningResources - A function that searches for videos, books, articles, and courses.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport {\n  FindLearningResourcesInputSchema,\n  FindLearningResourcesOutputSchema,\n  VideoSchema,\n  type FindLearningResourcesInput,\n  type FindLearningResourcesOutput\n} from '@/ai/schemas/learning-resources';\n\n// Tool: Search YouTube\nasync function fetchYoutubeVideos(query: string): Promise<{ videos: z.infer<typeof VideoSchema>[] }> {\n    const apiKey = process.env.YOUTUBE_API_KEY;\n    if (!apiKey || apiKey === 'YOUR_YOUTUBE_API_KEY_HERE') {\n        // To avoid breaking the demo, return empty array if key is not set.\n        // In a real app, you'd want to throw an error.\n        console.warn('YOUTUBE_API_KEY is not set. YouTube search will be skipped.');\n        return { videos: [] };\n    }\n    \n    const url = `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(query)}&type=video&maxResults=6&key=${apiKey}`;\n\n    try {\n        const response = await fetch(url);\n        if (!response.ok) {\n            const errorBody = await response.json();\n            console.error('YouTube API Error:', errorBody);\n            // In a real app, you might want a more robust error handling that informs the user.\n            // For now, we return empty to not break the whole flow.\n            return { videos: [] };\n        }\n        const data = await response.json();\n        if (!data.items) {\n          return { videos: [] };\n        }\n        const videos = data.items.map((item: any) => ({\n            videoId: item.id.videoId,\n            title: item.snippet.title,\n            description: item.snippet.description,\n            thumbnailUrl: item.snippet.thumbnails.high.url,\n            channelTitle: item.snippet.channelTitle,\n        }));\n\n        return { videos };\n    } catch (error) {\n        console.error('Failed to fetch YouTube videos:', error);\n        // Return empty array on failure to not break the whole flow.\n        return { videos: [] };\n    }\n}\n\nconst searchYoutube = ai.defineTool(\n    {\n      name: 'searchYoutube',\n      description: 'Searches YouTube for videos based on a query.',\n      inputSchema: z.object({ query: z.string() }),\n      outputSchema: z.object({ videos: z.array(VideoSchema) }),\n    },\n    async (input) => {\n      return await fetchYoutubeVideos(input.query);\n    }\n);\n\n\n// Main Flow\nconst findLearningResourcesFlow = ai.defineFlow(\n  {\n    name: 'findLearningResourcesFlow',\n    inputSchema: FindLearningResourcesInputSchema,\n    outputSchema: FindLearningResourcesOutputSchema,\n  },\n  async (input) => {\n    const llmResponse = await ai.generate({\n        prompt: { query: input.query },\n        system: `You are an expert learning advisor. Your goal is to provide a comprehensive and high-quality list of learning resources for the topic: \"{{query}}\".\n\nYou must perform the following actions:\n1.  Use the 'searchYoutube' tool to find relevant YouTube videos for the user's query.\n2.  Generate a list of 2-3 seminal books or highly-regarded articles. For each, provide a title, a URL, and a brief, compelling description explaining why it's a valuable resource.\n3.  Generate a list of 2-3 top online courses. Prioritize free courses if available. For each, provide a title, a URL, and a brief, compelling description of what the course offers.\n\nYour final output must conform to the specified JSON schema.\n`,\n        model: 'googleai/gemini-1.5-flash-latest',\n        tools: [searchYoutube],\n        output: {\n            schema: FindLearningResourcesOutputSchema,\n        },\n    });\n\n    return llmResponse.output || { videos: [], booksAndArticles: [], courses: [] };\n  }\n);\n\n\n// Exported function to be called from the UI\nexport async function findLearningResources(input: FindLearningResourcesInput): Promise<FindLearningResourcesOutput> {\n  return findLearningResourcesFlow(input);\n}\n"],"names":[],"mappings":";;;;;;IAwGsB,wBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/resources/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { BookOpen, LoaderCircle, Search, Youtube, BookCopy, Award, ArrowRight, BrainCircuit } from 'lucide-react';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormMessage,\n} from '@/components/ui/form';\nimport { findLearningResources } from '@/ai/flows/find-learning-resources';\nimport type { FindLearningResourcesOutput } from '@/ai/schemas/learning-resources';\nimport { useSearchParams } from 'next/navigation';\nimport React from 'react';\nimport { Skeleton } from '@/components/ui/skeleton';\n\nconst formSchema = z.object({\n  query: z.string().min(3, 'Please enter a search term with at least 3 characters.'),\n});\n\ntype Resources = FindLearningResourcesOutput;\n\nconst suggestedTopics = [\n    'Data Structures in Python',\n    'React Native for Beginners',\n    'Advanced SQL Queries',\n    'UX Design Principles',\n    'Machine Learning Fundamentals'\n];\n\n\nexport default function ResourcesPage() {\n  const [resources, setResources] = useState<Resources | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  const searchParams = useSearchParams();\n  const queryParam = searchParams.get('query');\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      query: queryParam || '',\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsLoading(true);\n    setError(null);\n    setResources(null);\n    try {\n      const result = await findLearningResources({ query: values.query });\n      if (result.videos.length === 0 && result.booksAndArticles.length === 0 && result.courses.length === 0) {\n        setError('No resources found for your query. Try a different search term.');\n      }\n      setResources(result);\n    } catch (err) {\n        console.error('Error searching resources:', err);\n        const errorMessage = (err as Error).message;\n        if (errorMessage.includes('YOUTUBE_API_KEY')) {\n            setError('The YouTube API Key is not configured. Please add it to your .env file.');\n        } else {\n            setError('An error occurred while fetching resources. Please try again.');\n        }\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  React.useEffect(() => {\n    if (queryParam) {\n      form.setValue('query', queryParam);\n      onSubmit({ query: queryParam });\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queryParam]);\n  \n  const handleSuggestionClick = (topic: string) => {\n    form.setValue('query', topic);\n    onSubmit({ query: topic });\n  };\n\n\n  const renderLoadingState = () => (\n    <div className=\"space-y-8\">\n        <Card>\n            <CardHeader>\n                <Skeleton className=\"h-6 w-1/3\" />\n                <Skeleton className=\"h-4 w-2/3\" />\n            </CardHeader>\n            <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Skeleton className=\"h-40 rounded-lg\" />\n                <Skeleton className=\"h-40 rounded-lg\" />\n            </CardContent>\n        </Card>\n        <Card>\n            <CardHeader>\n                 <Skeleton className=\"h-6 w-1/3\" />\n                <Skeleton className=\"h-4 w-2/3\" />\n            </CardHeader>\n            <CardContent className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                <Skeleton className=\"h-48 rounded-lg\" />\n                <Skeleton className=\"h-48 rounded-lg\" />\n                <Skeleton className=\"h-48 rounded-lg\" />\n            </CardContent>\n        </Card>\n    </div>\n  );\n\n  const renderEmptyState = () => (\n    <div className=\"text-center py-20\">\n        <BrainCircuit className=\"w-16 h-16 text-primary/50 mx-auto mb-4\" />\n        <h3 className=\"text-xl font-semibold\">Unlock Your Learning Potential</h3>\n        <p className=\"text-muted-foreground mt-2 mb-6\">Enter a topic above to discover curated learning resources.</p>\n        <div className=\"space-y-2\">\n             <p className=\"text-sm font-medium\">Or try one of these popular topics:</p>\n             <div className=\"flex flex-wrap justify-center gap-2\">\n                {suggestedTopics.map(topic => (\n                    <Button key={topic} variant=\"outline\" size=\"sm\" onClick={() => handleSuggestionClick(topic)}>\n                        {topic}\n                    </Button>\n                ))}\n             </div>\n        </div>\n    </div>\n    );\n\n  const renderErrorState = () => (\n     <div className=\"flex justify-center py-20\">\n        <Card className=\"w-full max-w-md text-center\">\n            <CardHeader>\n                <CardTitle>Something Went Wrong</CardTitle>\n            </CardHeader>\n            <CardContent>\n                <p className=\"text-destructive\">{error}</p>\n            </CardContent>\n        </Card>\n    </div>\n  );\n\n  const renderResults = () => (\n    <div className=\"space-y-8\">\n        {resources && resources.booksAndArticles.length > 0 && (\n            <Card>\n                <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\"><BookCopy /> Recommended Reading</CardTitle>\n                    <CardDescription>\n                        Curated books and articles to deepen your understanding.\n                    </CardDescription>\n                </CardHeader>\n                <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {resources.booksAndArticles.map((item, index) => (\n                         <Card key={`${item.title}-${index}`} className=\"flex flex-col\">\n                            <CardHeader>\n                                <CardTitle className=\"text-lg\">{item.title}</CardTitle>\n                            </CardHeader>\n                            <CardContent className=\"flex-grow\">\n                                <p className=\"text-sm text-muted-foreground\">{item.description}</p>\n                            </CardContent>\n                            <CardFooter>\n                                <Button asChild variant=\"outline\" className=\"w-full\">\n                                    <Link href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        Go to Resource <ArrowRight className=\"ml-2 h-4 w-4\" />\n                                    </Link>\n                                </Button>\n                            </CardFooter>\n                        </Card>\n                    ))}\n                </CardContent>\n            </Card>\n        )}\n\n        {resources && resources.courses.length > 0 && (\n             <Card>\n                <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\"><Award /> Top Online Courses</CardTitle>\n                    <CardDescription>\n                       Top courses to build your skills. Prioritizing free options where available.\n                    </CardDescription>\n                </CardHeader>\n                <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {resources.courses.map((item, index) => (\n                        <Card key={`${item.title}-${index}`} className=\"flex flex-col\">\n                            <CardHeader>\n                                <CardTitle className=\"text-lg\">{item.title}</CardTitle>\n                            </CardHeader>\n                            <CardContent className=\"flex-grow\">\n                                <p className=\"text-sm text-muted-foreground\">{item.description}</p>\n                            </CardContent>\n                            <CardFooter>\n                                <Button asChild variant=\"outline\" className=\"w-full\">\n                                    <Link href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        Explore Course <ArrowRight className=\"ml-2 h-4 w-4\" />\n                                    </Link>\n                                </Button>\n                            </CardFooter>\n                        </Card>\n                    ))}\n                </CardContent>\n            </Card>\n        )}\n\n        {resources && resources.videos.length > 0 && (\n            <Card>\n                <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\"><Youtube /> Recommended Videos</CardTitle>\n                    <CardDescription>\n                        Top video tutorials from YouTube to learn visually.\n                    </CardDescription>\n                </CardHeader>\n                <CardContent className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {resources.videos.map((video) => (\n                        <Card key={video.videoId} className=\"overflow-hidden transition-all hover:shadow-xl hover:-translate-y-1\">\n                        <Link href={`https://www.youtube.com/watch?v=${video.videoId}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"group\">\n                            <div className=\"relative aspect-video\">\n                            <Image\n                                src={video.thumbnailUrl}\n                                alt={video.title}\n                                fill\n                                className=\"object-cover\"\n                            />\n                            </div>\n                            <CardHeader>\n                            <CardTitle className=\"text-base font-semibold group-hover:text-primary transition-colors\">{video.title}</CardTitle>\n                            <CardDescription className=\"text-xs pt-1\">{video.channelTitle}</CardDescription>\n                            </CardHeader>\n                        </Link>\n                        </Card>\n                    ))}\n                </CardContent>\n            </Card>\n        )}\n    </div>\n  );\n\n  return (\n    <div className=\"p-4 md:p-8 space-y-8\">\n      <div className=\"flex items-center gap-4\">\n        <div className=\"p-3 bg-primary/10 rounded-lg\">\n          <BookOpen className=\"w-8 h-8 text-primary\" />\n        </div>\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight font-headline\">\n            Learning Resources\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Find courses, articles, and videos to help you grow.\n          </p>\n        </div>\n      </div>\n\n       <div className=\"sticky top-0 z-10 bg-background/80 backdrop-blur-sm -mx-8 px-8 py-4 -mt-8\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"flex items-start gap-4\">\n                  <FormField\n                    control={form.control}\n                    name=\"query\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex-grow\">\n                        <FormControl>\n                          <div className=\"relative\">\n                            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                            <Input placeholder=\"e.g., 'React hooks' or 'Data structures in Python'\" className=\"pl-10\" {...field} />\n                          </div>\n                        </FormControl>\n                        <FormMessage className=\"mt-2\" />\n                      </FormItem>\n                    )}\n                  />\n                  <Button type=\"submit\" disabled={isLoading} className=\"w-32\">\n                    {isLoading ? (\n                      <LoaderCircle className=\"mr-2 h-4 w-4 animate-spin\" />\n                    ) : (\n                      'Search'\n                    )}\n                  </Button>\n                </form>\n              </Form>\n            </CardContent>\n          </Card>\n       </div>\n      \n      {isLoading ? renderLoadingState() : error ? renderErrorState() : resources ? renderResults() : renderEmptyState()}\n\n    </div>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}